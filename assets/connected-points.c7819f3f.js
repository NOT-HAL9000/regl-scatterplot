import{c as e,a as t,s as o}from"./utils.65df8bc0.js";import"./vendor.de749451.js";const n=document.querySelector("#canvas"),i=document.querySelector("#num-points"),r=document.querySelector("#num-points-value"),c=document.querySelector("#point-size"),a=document.querySelector("#point-size-value"),l=document.querySelector("#opacity"),s=document.querySelector("#opacity-value"),u=document.querySelector("#click-lasso-initiator"),d=document.querySelector("#reset"),p=document.querySelector("#export"),v=document.querySelector("#example-connected-points");v.setAttribute("class","active"),v.removeAttribute("href");let y=[],m=9e3,C=1,S=.33,g=[];const h=e({canvas:n,lassoMinDelay:10,lassoMinDist:2,pointSize:C,showReticle:!0,reticleColor:[1,1,.878431373,.33],showPointConnections:!0,pointConnectionColor:[1,1,1,.15],pointConnectionSize:2,lassoInitiator:!0});t(h),p.addEventListener("click",(()=>o(h))),console.log(`Scatterplot v${h.get("version")}`),h.subscribe("select",(({points:e})=>{if(console.log("Selected:",e),g=e,1===g.length){const e=y[g[0]];console.log(`X: ${e[0]}\nY: ${e[1]}\nCategory: ${e[2]}\nValue: ${e[3]}`)}})),h.subscribe("deselect",(()=>{console.log("Deselected:",g),g=[]}));const q=e=>{m=e,i.value=m,r.innerHTML=m,y=(e=>{const t=Math.round(e/3),o=Math.round(t/5),n=[];for(let i=0;i<3;i++)for(let e=0;e<o;e++)for(let t=0;t<5;t++)n.push([.6*i-.6+(.3*Math.random()-.15),.45*t-.9,i,Math.random(),i*o+e]);return n})(m),h.draw(y)};i.addEventListener("input",(e=>{r.innerHTML=+e.target.value+" <em>release to redraw</em>"}));i.addEventListener("change",(e=>q(+e.target.value)));const L=e=>{var t;C=e,c.value=C,a.innerHTML=C,h.set({pointSize:(t=C,Array(100).fill().map(((e,o)=>1+o/99*(10*t-1))))})};c.addEventListener("input",(e=>L(+e.target.value)));const f=e=>{S=e,l.value=S,s.innerHTML=S,h.set({opacity:S})};l.addEventListener("input",(e=>f(+e.target.value)));u.addEventListener("change",(e=>{h.set({lassoInitiator:e.target.checked})})),u.checked=h.get("lassoInitiator");d.addEventListener("click",(()=>{h.reset()})),h.set({colorBy:"valueZ",sizeBy:"valueW",pointColor:[[255,128,203,128],[87,199,255,128],[238,228,98,128]],pointConnectionColorBy:"valueZ",pointConnectionColor:[[255,128,203,6],[87,199,255,6],[238,228,98,6]],pointConnectionColorActive:[[255,128,203,128],[87,199,255,128],[238,228,98,128]],pointConnectionColorHover:[[255,128,203,99],[87,199,255,99],[238,228,98,99]],pointConnectionOpacityBy:"valueW",pointConnectionOpacity:Array(10).fill().map(((e,t)=>(t+1)/100)),pointConnectionSizeBy:"valueW",pointConnectionSize:Array(18).fill().map(((e,t)=>(t+1)/2))}),L(C),f(S),q(m);
