import{c as e,a as t,s as o}from"./utils.9260f931.js";import"./vendor.ad595088.js";const n=document.querySelector("#canvas"),r=document.querySelector("#num-points"),c=document.querySelector("#num-points-value"),s=document.querySelector("#point-size"),l=document.querySelector("#point-size-value"),i=document.querySelector("#opacity"),a=document.querySelector("#opacity-value"),u=document.querySelector("#click-lasso-initiator"),d=document.querySelector("#reset"),y=document.querySelector("#export"),p=document.querySelector("#example-dynamic-opacity");p.setAttribute("class","active"),p.removeAttribute("href");let v=[],m=1e6,S=2,g=.15,q=[];const L=e({canvas:n,lassoMinDelay:10,lassoMinDist:2,pointSize:S,pointColor:"#fff",opacityBy:"density",showReticle:!0,reticleColor:[1,1,.878431373,.33],lassoInitiator:!0});t(L),y.addEventListener("click",(()=>o(L))),console.log(`Scatterplot v${L.get("version")}`),L.subscribe("select",(({points:e})=>{if(console.log("Selected:",e),q=e,1===q.length){const e=v[q[0]];console.log(`X: ${e[0]}\nY: ${e[1]}\nCategory: ${e[2]}\nValue: ${e[3]}`)}})),L.subscribe("deselect",(()=>{console.log("Deselected:",q),q=[]}));const f=e=>{m=e,r.value=m,c.innerHTML=m,v=(e=>{const t=[];let o,n,r,c=2.644838333129883,s=4.060488700866699,l=2.8982460498809814;const i=.006;let a=1/0,u=-1/0,d=1/0,y=-1/0;for(let m=0;m<=e;m++){let e=-s-l,p=c+.2*s,v=.2+l*(c-5.7);const m=c+.003*e,S=s+.003*p,g=l+.003*v;e=-S-g,p=m+.2*S,v=.2+g*(m-5.7),o=c+i*e,n=s+i*p,r=l+i*v,t.push([o,n,0,0]),a=o<a?o:a,u=o>u?o:u,d=n<d?n:d,y=n>y?n:y,c=o,s=n,l=r}const p=u-a,v=y-d;for(let m=0;m<=e;m++)t[m][0]-=a,t[m][0]/=p/2,t[m][0]-=1,t[m][1]-=d,t[m][1]/=v/2,t[m][1]-=1;return t})(m),L.draw(v)};r.addEventListener("input",(e=>{c.innerHTML=+e.target.value+" <em>release to redraw</em>"}));r.addEventListener("change",(e=>f(+e.target.value)));const h=e=>{S=e,s.value=S,l.innerHTML=S,L.set({pointSize:S})};s.addEventListener("input",(e=>h(+e.target.value)));const M=i.parentNode.cloneNode(!0);i.parentNode.after(M),i.style.display="none",a.innerHTML="Auto";const b=M.querySelector("input"),E=M.querySelector(".label"),H=M.querySelector(".value");E.innerHTML="Opacity Density Fill";const T=(e,t)=>{g=e,b.value=g,H.innerHTML=g,t||L.set({opacityByDensityFill:g})};b.addEventListener("input",(e=>T(+e.target.value))),T(g,!0);u.addEventListener("change",(e=>{L.set({lassoInitiator:e.target.checked})})),u.checked=L.get("lassoInitiator");d.addEventListener("click",(()=>{L.reset()})),h(S),f(m);
