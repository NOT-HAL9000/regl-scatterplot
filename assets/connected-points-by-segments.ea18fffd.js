import{c as e,a as t,s as o}from"./utils.65df8bc0.js";import"./vendor.de749451.js";const n=document.querySelector("#canvas"),r=document.querySelector("#num-points"),i=document.querySelector("#num-points-value"),c=document.querySelector("#point-size"),a=document.querySelector("#point-size-value"),s=document.querySelector("#opacity"),l=document.querySelector("#opacity-value"),u=document.querySelector("#click-lasso-initiator"),d=document.querySelector("#reset"),p=document.querySelector("#export"),m=document.querySelector("#example-connected-points-by-segment");m.setAttribute("class","active"),m.removeAttribute("href");let y=[],v=9e3,g=1,S=.33,C=[];const h=e({canvas:n,lassoMinDelay:10,lassoMinDist:2,pointSize:g,showReticle:!0,reticleColor:[1,1,.878431373,.33],showPointConnections:!0,pointConnectionColor:[1,1,1,.15],pointConnectionSize:2,lassoInitiator:!0});t(h),p.addEventListener("click",(()=>o(h))),console.log(`Scatterplot v${h.get("version")}`),h.subscribe("select",(({points:e})=>{if(console.log("Selected:",e),C=e,1===C.length){const e=y[C[0]];console.log(`X: ${e[0]}\nY: ${e[1]}\nCategory: ${e[2]}\nValue: ${e[3]}`)}})),h.subscribe("deselect",(()=>{console.log("Deselected:",C),C=[]}));const f=e=>{v=e,r.value=v,i.innerHTML=v,y=(e=>{const t=Math.round(e/3),o=Math.round(t/5),n=[];for(let r=0;r<3;r++)for(let e=0;e<o;e++)for(let t=0;t<5;t++)n.push([.6*r-.6+(.3*Math.random()-.15),.45*t-.9,r,Math.random(),r*o+e]);return n})(v),h.draw(y)};r.addEventListener("input",(e=>{i.innerHTML=+e.target.value+" <em>release to redraw</em>"}));r.addEventListener("change",(e=>f(+e.target.value)));const q=e=>{var t;g=e,c.value=g,a.innerHTML=g,h.set({pointSize:(t=g,Array(100).fill().map(((e,o)=>1+o/99*(10*t-1))))})};c.addEventListener("input",(e=>q(+e.target.value)));const L=e=>{S=e,s.value=S,l.innerHTML=S,h.set({opacity:S})};s.addEventListener("input",(e=>L(+e.target.value)));u.addEventListener("change",(e=>{h.set({lassoInitiator:e.target.checked})})),u.checked=h.get("lassoInitiator");d.addEventListener("click",(()=>{h.reset()})),h.set({colorBy:"valueZ",sizeBy:"valueW",pointColor:[[255,128,203,128],[87,199,255,128],[238,228,98,128]],pointConnectionColorBy:"segment",pointConnectionColor:Array(200).fill().map(((e,t)=>[t+55,t+55,t+55,10])),pointConnectionSizeBy:"segment",pointConnectionSize:Array(20).fill().map(((e,t)=>1+t/4)),pointConnectionOpacityBy:"segment",pointConnectionOpacity:Array(64).fill().map(((e,t)=>(t+8)/256))}),q(g),L(S),f(v);
